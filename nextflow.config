// Dependencies docker image
process.container = 'bluemoon222/gbs-typer-sanger-nf:0.0.7'

manifest {
    homePage = 'https://github.com/varunshamanna/GBS-Assembly-Typer-CRL-nf'
    description = "A NextFlow pipeline for Assembly and QC of GBS reads and typing using Ben Metcalf's GBS Typer pipeline"
    mainScript = 'main.nf'
    nextflowVersion = '>=20.10.0'
}

params {
    queue_size = 100
    reads = ""
    version = "v1.0"
    db_version = "0.2.1"
    db = "$projectDir/databases"
    db_dir = "./db/$db_version"
    output = "$projectDir/output"
    config = "./headers.json"
    
    //parameters for typing
    serotyper_min_read_depth = 0
    gbs_blactam_db = "$db_dir/GBS_bLactam-DB/GBS_bLactam_Ref.fasta"
    gbs_blactam_1A_db = "$db_dir/GBS_bLactam-DB/GBS_bLactam_1A-DB.faa"
    gbs_blactam_2B_db = "$db_dir/GBS_bLactam-DB/GBS_bLactam_2B-DB.faa"
    gbs_blactam_2X_db = "$db_dir/GBS_bLactam-DB/GBS_bLactam_2X-DB.faa"
    gbs_res_typer_db = "$db_dir/GBS_resTyper_Gene-DB/GBS_Res_Gene-DB_Final.fasta"
    gbs_res_targets_db = "$db_dir/GBS_resTyper_Gene-DB/seqs_of_interest.txt"
    gbs_res_min_coverage = 99.9
    gbs_res_max_divergence = 5
    mlst_min_coverage = 99.999
    mlst_min_read_depth = 30
    other_res_db = "$db_dir/ResFinder-DB/ResFinder.fasta"
    other_res_min_coverage = 70
    other_res_max_divergence = 30
    restyper_min_read_depth = 30
    gbs_surface_typer_db = "$db_dir/GBS_Surface_Gene-DB/GBS_Surface_Gene-DB_Final.fasta"
    surfacetyper_min_coverage = 99.0
    surfacetyper_max_divergence = 8
    surfacetyper_min_read_depth = 30
    pbp_frac_align_threshold = 0.5
    pbp_frac_identity_threshold = 0.5
    help = false
    test = false

    // Output files
    params.sero_res_incidence_out = "serotype_res_incidence.txt"
    params.variants_out =  "gbs_res_variants.txt"
    params.alleles_variants_out = "drug_cat_alleles_variants.txt"
    params.res_accessions_out = "resfinder_accessions.txt"
    params.existing_pbp_alleles_out = "existing_pbp_alleles.txt"
    params.surface_protein_incidence_out = "surface_protein_incidence.txt"
    params.surface_protein_variants_out = "surface_protein_variants.txt"
    params.existing_mlst_alleles_out = "existing_sequence_types.txt"
    params.new_mlst_alleles_status = "new_mlst_alleles.log"
    params.gbs_typer_report = "GBS_typer_report.tsv"

    // Default assembler
    assembler = "shovill"
    // Default assembler thread count (0 means all)
    assembler_thread = 0
    // Default minimum contig length
    min_contig_length = 500
    // Default assembly publish mode
    assembly_publish = "link"

    // Default link for Kraken2 Database, and usage of memory mapping
    kraken2_db_remote = "https://genome-idx.s3.amazonaws.com/kraken/minikraken2_v1_8GB_201904.tgz"
    kraken2_memory_mapping = true

    // Default referece genome assembly path for its BWA database 
    ref_genome = "$projectDir/data/NC_004368.1.fasta"

    // Default values for QC
    gbs_percentage = 50.00
    non_gbs_percentage = 2.00
    ref_coverage = 70.00
    het_snp_site = 40
    contigs = 500
    length_low = 1450000
    length_high = 2800000
    depth = 20.00

    // Toggle for removing .bam and .sam files mid-run to reduce storage requirement
    // Warning: This will break the -resume function of Nextflow
    lite = false

}

env {
    PYTHONPATH = "$baseDir"
}

profiles {
    standard {
        docker {
             enabled = true
             autoMounts = true
             cacheDir = "$PWD"
        }
    }

    // Basic configuration for an LSF environment
    lsf {
        process.cpus = 1
        process.memory = "2GB"
        process.queue = "normal"
        process.errorStrategy = {task.attempt <= 1 ? 'retry' : 'ignore'}
        maxRetries = 2
        process.maxRetries = 3
        executor {
            name = "lsf"
            // Maximum number of jobs to spawn at once - adjust as necessary
            queueSize = params.queue_size
            jobName = { "gbstyper - $task.name - $task.hash" }
            pollInterval = "5 sec"
        }
    }

    // Singularity configuration used by the Sanger Institute
    sanger {
        docker {
             enabled = false
        }
        singularity {
             enabled = true
             autoMounts = true
             cacheDir = "$PWD"
        }
    }
}

// Set process container images
process {
    withLabel: bash_container {
        container = 'wbitt/network-multitool:69aa4d5'
    }
    withLabel: python_container {
        container = 'amancevice/pandas:2.0.2'
    }
    withLabel: fastp_container {
        container = 'staphb/fastp:0.23.4'
    }
    withLabel: unicycler_container {
        container = 'staphb/unicycler:0.5.0'
    }
    withLabel: shovill_container {
        container = 'staphb/shovill:1.1.0-2022Dec'
    }
    withLabel: quast_container {
        container = 'staphb/quast:5.0.2'
    }
    withLabel: bwa_container {
        container = 'staphb/bwa:0.7.17'
    }
    withLabel: samtools_container {
        container = 'staphb/samtools:1.16'
    }
    withLabel: bcftools_container {
        container = 'staphb/bcftools:1.16'
    }
    withLabel: kraken2_container {
        container = 'staphb/kraken2:2.1.2-no-db'
    }
    withLabel: csvtk_container {
        container = 'quay.io/biocontainers/csvtk:0.30.0--h9ee0642_1'
    }
    withLabel: gbs_typer_container {
        container = 'bluemoon222/gbs-typer-sanger-nf:0.0.7'
    }
}